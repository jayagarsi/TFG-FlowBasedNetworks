
--- GRAF AMB IRC PAPER (min-FlowNGC) ---
    G = nx.DiGraph()
    G.add_edge("a", "b", weight=2)
    G.add_edge("b", "a", weight=1)
    G.add_edge("b", "d", weight=1)
    G.add_edge("c", "b", weight=2)
    G.add_edge("d", "f", weight=2)
    G.add_edge("f", "c", weight=1)
    G.add_edge("f", "d", weight=1)
    G.add_edge("g", "f", weight=2)

--- GRAF CREAT PER MI COM A EXEMPLE ---
    G = nx.DiGraph()
    G.add_edge("a", "b", weight = 2)
    G.add_edge("a", "d", weight = 1)
    G.add_edge("b", "a", weight = 1)
    G.add_edge("b", "c", weight = 2)
    G.add_edge("c", "a", weight = 3)
    G.add_edge("d", "a", weight = 3)

--- GRAF CICLE AMB BUDGETS DIFERENTS ---
    n = 7
    k = 3
    G = nx.DiGraph()
    G.add_edge("a", "b", weight = 1)
    G.add_edge("b", "c", weight = 3)
    G.add_edge("c", "d", weight = 3)
    G.add_edge("d", "e", weight = 3)
    G.add_edge("e", "f", weight = 3)
    G.add_edge("f", "g", weight = 3)
    G.add_edge("g", "a", weight = 6)
    # si fem un cicle biconnex el maxim min-cut dependra dels dos budgets m√©s petits

--- GRAF GENERAT AMB ALG GREEDY FET PER MI PER LA OPT AMB BUDGET VARIABLE ---
    n = 5
    k = [1, 2, 2, 3, 4]
    G = nx.DiGraph()
    G.add_edge(1, 2, weight = k[0])
    G.add_edge(2, 3, weight = k[1])
    G.add_edge(3, 4, weight = k[2])
    G.add_edge(4, 5, weight = k[3]-1)
    G.add_edge(4, 3, weight = 1)
    G.add_edge(5, 1, weight = k[4]-1)
    G.add_edge(5, 2, weight = 1)

--- GRAF ARBRE AMB BUDGETS DIFERENTS ---
    n = 7
    k = [2, 2, 3, 3, 4, 5, 6]
    G = nx.DiGraph()
    G.add_edge(1, 2, weight = k[0]/2)
    G.add_edge(1, 3, weight = k[0]/2)
    G.add_edge(2, 4, weight = k[1]/2)
    G.add_edge(2, 5, weight = k[1]/2)
    G.add_edge(4, 2, weight = k[3])
    G.add_edge(5, 2, weight = k[4])
    G.add_edge(3, 6, weight = k[2]-2)
    G.add_edge(3, 7, weight = k[2]-2)
    G.add_edge(3, 1, weight = k[2]-2)
    G.add_edge(6, 3, weight = k[5])
    G.add_edge(7, 3, weight = k[6])
    # el min-cut sempre depen de l'aresta amb menys capacitat
    # i aquesta aresta sempre estara connectada a l'agent amb
    # menys capacitat

--- GRAF ARBRE AMB MATEIX BUDGET K ---
    n = 7
    k = 2
    G = nx.DiGraph()
    G.add_edge(1, 2, weight = k)
    G.add_edge(1, 3, weight = k)
    G.add_edge(2, 4, weight = k)
    G.add_edge(2, 5, weight = k)
    G.add_edge(4, 2, weight = k)
    G.add_edge(5, 2, weight = k)
    G.add_edge(3, 6, weight = k)
    G.add_edge(3, 7, weight = k)
    G.add_edge(6, 3, weight = k)
    G.add_edge(7, 3, weight = k)
    # el min-cut sempre sera com a maxim k 
    # doncs amb tallar una aresta n'hi ha prou

--- GRAF NO SE ---
    G = nx.DiGraph()
    G.add_edge(1, 2, weight = 1)
    G.add_edge(2, 3, weight = 1)
    G.add_edge(2, 4, weight = 1)
    G.add_edge(3, 1, weight = 1)
    G.add_edge(3, 4, weight = 2)
    G.add_edge(4, 2, weight = 1)
    G.add_edge(4, 1, weight = 2)